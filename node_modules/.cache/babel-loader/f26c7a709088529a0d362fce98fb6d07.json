{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leandro Carvalho\\\\Desktop\\\\Projetos\\\\IDH\\\\idh-jogo\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport Card from \"./components/Card/Card\";\nimport Jogar from \"./components/Jogar/Jogar\";\nimport bd from './bancoDeDados/bancoDeDados.json';\nimport Baralho from \"./components/Baralho/Baralho\";\nimport Mandante from \"./components/Jogador/Mandante\";\nimport Visitante from \"./components/Jogador/Visitante\";\nimport Cabecalho from \"./components/cabecalho/Cabecalho\";\nimport Bandeiras from \"./components/Bandeiras/Bandeiras\";\nimport { findFlagUrlByCountryName } from \"country-flags-svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      mesa: true,\n      mandante: [],\n      visitante: []\n    };\n  }\n\n  TodosIds() {\n    let todosIds = [];\n\n    for (let i = 0; i < bd.length; i++) {\n      todosIds.push(bd[i].id);\n    }\n\n    console.log('estou no TodosIds', todosIds);\n    return todosIds;\n  }\n\n  PegarDoBanco(ids) {\n    console.log('estou no pegar do banco', ids);\n    const dados = [];\n    ids.map(ids => {\n      for (let i = 0; i < bd.length; i++) {\n        if (ids == bd[i].id) {\n          dados.push({\n            id: bd[i].id,\n            país: bd[i].país,\n            idh: bd[i].idh,\n            exp: bd[i].exp\n          });\n        }\n      }\n    });\n    dados.map(e => {\n      let band = findFlagUrlByCountryName(\"Brazil\");\n      console.log('band é:', band);\n    });\n    console.log('pegar do banco', dados);\n    return dados;\n  }\n\n  DistribuirCartas(indices) {\n    console.log(indices);\n    var arrays;\n\n    if (indices.length % 2 == 0) {\n      console.log('estou dividino certo');\n      arrays = dividirArray(indices);\n    } else {\n      indices.pop();\n      arrays = dividirArray(indices);\n    }\n\n    function dividirArray(array) {\n      let tamanho = array.length;\n      let a1 = array.slice(0, tamanho / 2);\n      let a2 = array.slice(tamanho / 2);\n      return {\n        a1: a1,\n        a2: a2\n      };\n    }\n\n    console.log('arrays divididos', arrays);\n    this.setState({\n      mesa: false,\n      mandante: this.PegarDoBanco(arrays.a1),\n      visitante: this.PegarDoBanco(arrays.a2)\n    });\n  }\n\n  BandeirasInicio() {\n    let todasBandeiras = [];\n\n    for (let i = 0; i < bd.length; i++) {\n      todasBandeiras.push(bd[i].país);\n    }\n\n    todasBandeiras.sort();\n    return todasBandeiras;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"conteudo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cabecalho\",\n        children: /*#__PURE__*/_jsxDEV(Cabecalho, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bandeiras\",\n        children: /*#__PURE__*/_jsxDEV(Bandeiras, {\n          bandeirasInicio: this.BandeirasInicio()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"principal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"mandante\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Mandante\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Mandante, {\n            cartas: this.state.mandante\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"visitante\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Visitante\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Visitante, {\n            cartas: this.state.visitante\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"jogar\",\n          children: [/*#__PURE__*/_jsxDEV(Jogar, {\n            DistribuirCartas: this.DistribuirCartas.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(Baralho, {\n            cartas: this.PegarDoBanco(this.TodosIds()),\n            visivel: this.state.mesa\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n{\n  /* <Baralho  cartas={this.PegarDoBanco(this.TodosIds())} /> */\n}\nexport default App;","map":{"version":3,"sources":["C:/Users/Leandro Carvalho/Desktop/Projetos/IDH/idh-jogo/src/App.js"],"names":["React","Component","Card","Jogar","bd","Baralho","Mandante","Visitante","Cabecalho","Bandeiras","findFlagUrlByCountryName","App","constructor","state","mesa","mandante","visitante","TodosIds","todosIds","i","length","push","id","console","log","PegarDoBanco","ids","dados","map","país","idh","exp","e","band","DistribuirCartas","indices","arrays","dividirArray","pop","array","tamanho","a1","slice","a2","setState","BandeirasInicio","todasBandeiras","sort","render","bind"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport './App.css';\nimport Card from \"./components/Card/Card\";\nimport Jogar from \"./components/Jogar/Jogar\";\nimport bd from './bancoDeDados/bancoDeDados.json';\nimport Baralho from \"./components/Baralho/Baralho\"\nimport Mandante from \"./components/Jogador/Mandante\"\nimport Visitante from \"./components/Jogador/Visitante\"\nimport Cabecalho from \"./components/cabecalho/Cabecalho\";\nimport Bandeiras from \"./components/Bandeiras/Bandeiras\"\nimport { findFlagUrlByCountryName } from \"country-flags-svg\";\n\nclass App extends Component{\n  constructor(){\n    super();\n    \n    this.state = {\n      mesa:true,\n      mandante:[],\n      visitante:[]\n      \n    }\n  }\n\n   TodosIds(){\n     \n    let todosIds = []\n     for(let i=0;i<bd.length;i++){\n       todosIds.push(bd[i].id)\n     }\n\n     console.log('estou no TodosIds',todosIds)\n     return todosIds\n   }\n\n   PegarDoBanco(ids){\n    console.log('estou no pegar do banco',ids)\n    const dados = []\n    ids.map((ids)=>{\n      for(let i=0;i<bd.length;i++){\n        if(ids==bd[i].id){\n          dados.push({\n            id:bd[i].id,\n            país:bd[i].país,\n            idh:bd[i].idh,\n            exp:bd[i].exp\n            \n          })\n        }\n      }\n    })\n   \n    dados.map((e)=>{\n      let band = findFlagUrlByCountryName(\"Brazil\")\n      console.log('band é:',band)\n    })\n\n    console.log('pegar do banco',dados)\n    return dados\n   }\n\n  DistribuirCartas(indices){\n    console.log(indices)\n    var arrays;\n    if(indices.length%2==0){\n      console.log('estou dividino certo')\n      arrays = dividirArray(indices)\n    }\n    else{\n      indices.pop()\n      arrays = dividirArray(indices)\n    }\n    function dividirArray(array){\n      let tamanho = array.length;\n      let a1 = array.slice(0,tamanho/2)\n      let a2 = array.slice(tamanho/2)      \n      return {a1:a1,a2:a2}\n    }\n\n    \n    \n    console.log('arrays divididos',arrays)\n    this.setState({\n      mesa:false,\n      mandante: this.PegarDoBanco(arrays.a1),\n      visitante:this.PegarDoBanco(arrays.a2)\n      \n    })\n\n    \n\n  }\n\n  BandeirasInicio(){\n    let todasBandeiras = []\n    for(let i=0;i<bd.length;i++){\n      todasBandeiras.push(bd[i].país)\n    }\n    todasBandeiras.sort()\n\n    return todasBandeiras\n  \n  }\n\n\n\n  render(){\n    return(\n      <section className=\"conteudo\">\n        <div id='cabecalho'>\n        <Cabecalho />\n        </div>\n        <div id='bandeiras'>\n          <Bandeiras bandeirasInicio={this.BandeirasInicio()}/>\n        </div>\n        <div id=\"principal\">\n\n        <div id='mandante'>\n          <h2>Mandante</h2>\n        <Mandante  cartas={this.state.mandante}/>\n        </div>\n        <div id='visitante'>\n        <h2>Visitante</h2>\n        <Visitante cartas={this.state.visitante}/>\n        </div>\n        <div id='jogar'>\n\n         <Jogar   DistribuirCartas={this.DistribuirCartas.bind(this)}/>\n         <Baralho  cartas={this.PegarDoBanco(this.TodosIds())} visivel={this.state.mesa} />\n        </div>\n        </div>\n      \n        \n      </section>\n    )\n  }\n\n  \n}\n\n{/* <Baralho  cartas={this.PegarDoBanco(this.TodosIds())} /> */}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}