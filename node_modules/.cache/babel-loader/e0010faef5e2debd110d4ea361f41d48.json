{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leandro Carvalho\\\\Desktop\\\\Projetos\\\\IDH\\\\idh-jogo\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport Card from \"./components/Card/Card\";\nimport Jogar from \"./components/Jogar/Jogar\";\nimport bd from './bancoDeDados/bancoDeDados.json';\nimport Baralho from \"./components/Baralho/Baralho\";\nimport Mandante from \"./components/Jogador/Mandante\";\nimport Visitante from \"./components/Jogador/Visitante\";\nimport Cabecalho from \"./components/cabecalho/Cabecalho\";\nimport Bandeiras from \"./components/Bandeiras/Bandeiras\";\nimport { findFlagUrlByCountryName } from \"country-flags-svg\";\nimport Placar from \"./components/Placar/Placar\";\nimport Mesa from \"./components/Mesa/Mesa\"; //ideia -> Pegar os primeiros elementos dos arrays para jogar\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      mesa: Array.from({\n        length: bd.length\n      }, (v, k) => k + 1),\n      mandante: [],\n      visitante: [],\n      placarMandante: 0,\n      placarVisitante: 0,\n      resultado: {\n        texto: 'testando elemento',\n        classe: 'none'\n      }\n    };\n  }\n\n  TodosIds() {\n    let todosIds = [];\n\n    for (let i = 0; i < bd.length; i++) {\n      todosIds.push(bd[i].id);\n    }\n\n    return todosIds;\n  }\n\n  PegarDoBanco(ids) {\n    if (Array.isArray(ids)) {\n      const dados = [];\n      ids.map(ids => {\n        for (let i = 0; i < bd.length; i++) {\n          if (ids == bd[i].id) {\n            dados.push({\n              id: bd[i].id,\n              país: bd[i].país,\n              idh: bd[i].idh,\n              exp: bd[i].exp,\n              bandeira: findFlagUrlByCountryName(bd[i].país)\n            });\n          }\n        }\n      });\n      return dados;\n    } else {\n      return {\n        id: bd[ids].id,\n        país: bd[ids].país,\n        idh: bd[ids].idh,\n        exp: bd[ids].exp,\n        bandeira: findFlagUrlByCountryName(bd[ids].país)\n      };\n    }\n  }\n\n  DistribuirCartas(indices) {\n    if (indices.length % 2 == 0) {\n      var arrayDeCartas = indices;\n    } else {\n      indices.pop();\n      var arrayDeCartas = indices;\n    }\n\n    console.log('array de cartas é', arrayDeCartas);\n    this.setState({\n      mesa: indices,\n      mandante: this.PegarDoBanco(arrayDeCartas[0])\n    });\n  }\n\n  BandeirasInicio() {\n    let ordenaPaises = [];\n\n    for (let i = 0; i < bd.length; i++) {\n      ordenaPaises.push(bd[i].país);\n    }\n\n    ordenaPaises.sort();\n    let arrayBandeiras = [];\n\n    for (let i = 0; i < ordenaPaises.length; i++) {\n      arrayBandeiras.push({\n        nome: ordenaPaises[i],\n        bandeira: findFlagUrlByCountryName(ordenaPaises[i])\n      });\n    }\n\n    return arrayBandeiras;\n  }\n\n  JogadaMandante(jogada) {\n    console.log('estou no app e jogada é', jogada);\n    var buscarValor = this.state.mandante[0][jogada];\n    console.log('o valor é', buscarValor);\n    var vencedor = this.CompararJogada(jogada, this.state.mandante[0][jogada], this.state.visitante[0][jogada]);\n    this.AlterarPlacar(vencedor);\n  }\n\n  AlterarPlacar(vencedor) {\n    console.log('this.state', this.state);\n\n    if (vencedor == 'mandante') {\n      var a = this.state.placarMandante;\n      console.log('atual', a);\n      this.setState({\n        placarMandante: a + 1\n      });\n    } else if (vencedor == 'visitante') {\n      var a = this.state.placarVisitante;\n      console.log('atual', a);\n      this.setState({\n        placarVisitante: a + 1\n      });\n    }\n  }\n\n  CompararJogada(tipo, valorMandante, valorVisitante) {\n    if (tipo == 'idh' | tipo == 'exp') {\n      if (valorMandante == valorVisitante) {\n        return 'empate';\n      } else if (valorMandante > valorVisitante) {\n        return 'mandante';\n      } else {\n        return 'visitante';\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"conteudo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cabecalho\",\n        children: /*#__PURE__*/_jsxDEV(Cabecalho, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bandeiras\",\n        children: /*#__PURE__*/_jsxDEV(Bandeiras, {\n          bandeirasInicio: this.BandeirasInicio()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"principal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"mandante\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Mandante\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Mandante, {\n            cartas: this.state.mandante,\n            JogadaMandante: this.JogadaMandante.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"visitante\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Visitante\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Visitante, {\n            cartas: this.state.visitante\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"jogar\",\n          children: [/*#__PURE__*/_jsxDEV(Jogar, {\n            DistribuirCartas: this.DistribuirCartas.bind(this),\n            resultado: this.state.resultado\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(Mesa, {\n            cartas: this.state.mesa,\n            classe: \"pequeno\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"placar\",\n        children: /*#__PURE__*/_jsxDEV(Placar, {\n          placarMandante: this.state.placarMandante,\n          placarVisitante: this.state.placarVisitante\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n{\n  /* <Baralho  cartas={this.PegarDoBanco(this.TodosIds())} visivel={this.state.mesa}  /> */\n}\nexport default App;","map":{"version":3,"sources":["C:/Users/Leandro Carvalho/Desktop/Projetos/IDH/idh-jogo/src/App.js"],"names":["React","Component","Card","Jogar","bd","Baralho","Mandante","Visitante","Cabecalho","Bandeiras","findFlagUrlByCountryName","Placar","Mesa","App","constructor","state","mesa","Array","from","length","v","k","mandante","visitante","placarMandante","placarVisitante","resultado","texto","classe","TodosIds","todosIds","i","push","id","PegarDoBanco","ids","isArray","dados","map","país","idh","exp","bandeira","DistribuirCartas","indices","arrayDeCartas","pop","console","log","setState","BandeirasInicio","ordenaPaises","sort","arrayBandeiras","nome","JogadaMandante","jogada","buscarValor","vencedor","CompararJogada","AlterarPlacar","a","tipo","valorMandante","valorVisitante","render","bind"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport './App.css';\nimport Card from \"./components/Card/Card\";\nimport Jogar from \"./components/Jogar/Jogar\";\nimport bd from './bancoDeDados/bancoDeDados.json';\nimport Baralho from \"./components/Baralho/Baralho\"\nimport Mandante from \"./components/Jogador/Mandante\"\nimport Visitante from \"./components/Jogador/Visitante\"\nimport Cabecalho from \"./components/cabecalho/Cabecalho\";\nimport Bandeiras from \"./components/Bandeiras/Bandeiras\"\nimport { findFlagUrlByCountryName } from \"country-flags-svg\";\nimport Placar from \"./components/Placar/Placar\";\n\nimport Mesa from  \"./components/Mesa/Mesa\"\n\n//ideia -> Pegar os primeiros elementos dos arrays para jogar\n\nclass App extends Component{\n  constructor(){\n    super();\n    \n    this.state = {\n      mesa:Array.from({length: bd.length}, (v,k) => k + 1),\n      mandante:[],\n      visitante:[],\n      placarMandante:0,\n      placarVisitante:0,\n      resultado:{\n        texto:'testando elemento',\n        classe:'none',\n      }\n      \n    }\n  }\n\n   TodosIds(){\n     \n    let todosIds = []\n     for(let i=0;i<bd.length;i++){\n       todosIds.push(bd[i].id)\n     }\n\n     \n     return todosIds\n   }\n\n   PegarDoBanco(ids){\n    \n    if(Array.isArray(ids)){\n      const dados = []\n      ids.map((ids)=>{\n        for(let i=0;i<bd.length;i++){\n          if(ids==bd[i].id){\n            dados.push({\n              id:bd[i].id,\n              país:bd[i].país,\n              idh:bd[i].idh,\n              exp:bd[i].exp,\n              bandeira:findFlagUrlByCountryName(bd[i].país)\n              \n            })\n          }\n        }\n      })\n          \n      return dados\n    }\n    else{\n      return (\n        {\n          id:bd[ids].id,\n              país:bd[ids].país,\n              idh:bd[ids].idh,\n              exp:bd[ids].exp,\n              bandeira:findFlagUrlByCountryName(bd[ids].país)\n        }\n      )\n    }\n\n   \n   }\n\n  DistribuirCartas(indices){\n    \n    \n    if(indices.length%2==0){\n      var arrayDeCartas = indices;  \n      \n    }\n    else{\n      indices.pop()\n      var arrayDeCartas = indices;\n    }\n    \n      console.log('array de cartas é',arrayDeCartas)  \n   \n    this.setState({\n      \n      mesa:indices,\n      mandante: this.PegarDoBanco(arrayDeCartas[0]),\n      \n      \n    })\n\n    \n\n  }\n\n  BandeirasInicio(){\n    let ordenaPaises = []\n    for(let i=0;i<bd.length;i++){\n      ordenaPaises.push(bd[i].país)\n    }\n    ordenaPaises.sort()\n\n    let arrayBandeiras = [];\n\n    for(let i=0;i<ordenaPaises.length;i++){\n      arrayBandeiras.push({\n        nome:ordenaPaises[i],\n        bandeira:findFlagUrlByCountryName(ordenaPaises[i])\n      })\n    }\n\n    return arrayBandeiras\n  \n  }\n\n JogadaMandante(jogada){\n   console.log('estou no app e jogada é',jogada)\n   var buscarValor = this.state.mandante[0][jogada]\n   console.log('o valor é',buscarValor)\n   var vencedor = this.CompararJogada(jogada,this.state.mandante[0][jogada],this.state.visitante[0][jogada])\n    this.AlterarPlacar(vencedor)\n   \n }\n \n AlterarPlacar(vencedor){\n  console.log('this.state',this.state)\n  if(vencedor=='mandante'){\n     var a = this.state.placarMandante;\n     console.log('atual',a)\n     this.setState({\n       placarMandante:a+1\n     })\n    }\n  else if(vencedor=='visitante'){\n    var a = this.state.placarVisitante;\n    console.log('atual',a)\n    this.setState({\n      placarVisitante:a+1\n    })\n  }\n }\n\n CompararJogada(tipo,valorMandante,valorVisitante){\n   if(tipo=='idh'|tipo=='exp'){\n     if(valorMandante==valorVisitante){\n       return 'empate'\n     }\n     else if(valorMandante>valorVisitante){\n       return 'mandante'\n     }\n     else{\n       return 'visitante'\n     }\n   }\n }\n\n\n  render(){\n    return(\n      <section className=\"conteudo\">\n        <div id='cabecalho'>\n        <Cabecalho />\n        </div>\n        <div id='bandeiras'>\n          <Bandeiras bandeirasInicio={this.BandeirasInicio()}/>\n        </div>\n        <div id=\"principal\">\n\n        <div id='mandante'>\n          <h2>Mandante</h2>\n        <Mandante  cartas={this.state.mandante} JogadaMandante={this.JogadaMandante.bind(this)}/>\n        </div>\n        <div id='visitante'>\n        <h2>Visitante</h2>\n        <Visitante cartas={this.state.visitante} />\n        </div>\n        <div id='jogar'>\n\n         <Jogar   DistribuirCartas={this.DistribuirCartas.bind(this)} resultado={this.state.resultado}/>\n         <Mesa cartas={this.state.mesa} classe=\"pequeno\"/>\n        </div>\n        </div>\n        <div id='placar'>\n          <Placar placarMandante={this.state.placarMandante} placarVisitante={this.state.placarVisitante}/>\n        </div>\n        \n      \n        \n      </section>\n    )\n  }\n\n  \n}\n\n{/* <Baralho  cartas={this.PegarDoBanco(this.TodosIds())} visivel={this.state.mesa}  /> */}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}