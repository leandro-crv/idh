{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leandro Carvalho\\\\Desktop\\\\Projetos\\\\IDH\\\\idh-jogo\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport Card from \"./components/Card/Card\";\nimport Jogar from \"./components/Jogar/Jogar\";\nimport bd from './bancoDeDados/bancoDeDados.json';\nimport Baralho from \"./components/Baralho/Baralho\";\nimport Mandante from \"./components/Jogador/Mandante\";\nimport Visitante from \"./components/Jogador/Visitante\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cartas: [],\n      mandante: [],\n      visitante: []\n    };\n  }\n\n  PegarDoBanco() {\n    const dados = [];\n\n    for (let i = 0; i < bd.length; i++) {\n      dados.push({\n        id: bd[i].id,\n        país: bd[i].país,\n        idh: bd[i].idh,\n        exp: bd[i].exp\n      });\n    }\n\n    return dados;\n  }\n\n  DistribuirCartas(indices) {\n    console.log(indices);\n    var arrays;\n\n    if (indices.length % 2 == 0) {\n      console.log('estou dividino certo');\n      arrays = dividirArray(indices);\n    } else {\n      indices.pop();\n      arrays = dividirArray(indices);\n    }\n\n    function dividirArray(array) {\n      let tamanho = array.length;\n      let a1 = array.slice(0, tamanho / 2);\n      let a2 = array.slice(tamanho / 2);\n      return {\n        a1: a1,\n        a2: a2\n      };\n    }\n\n    var mandanteHtml = [];\n    arrays.a1.map(x => {\n      mandanteHtml.push(document.getElementById(x).text);\n    });\n    console.log('arrays divididos', arrays);\n    this.setState({\n      mandante: arrays.a1,\n      visitante: arrays.a2,\n      mandanteHtml: mandanteHtml\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"conteudo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"mandante\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Mandante\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"visitante\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Visitante\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Baralho, {\n        cartas: this.PegarDoBanco()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Jogar, {\n        class: \"classeJogar\",\n        DistribuirCartas: this.DistribuirCartas.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Mandante, {\n        className: \"mandante\",\n        mao: this.state.mandante,\n        maoHtml: this.state.mandanteHtml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Visitante, {\n        className: \"visitante\",\n        mao: this.state.visitante\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n} // <Jogar class=\"classeJogar\" criarCarta={this.criarCarta.bind(this)}/>\n//<Baralho cartas={this.state.cartas}/>\n//<button onClick={this.CriarBaralho.bind(this)} >Mostrar Cartas</button>\n\n/*   criarCarta(numero){\n    \n    var cartas = []\n    for(let i=0;i<numero.length;i++){\n      cartas.push({\n        pais:bd[i].país,\n        idh:bd[i].idh,\n        exp:bd[i].exp\n      })\n    }\n    console.log('numero é',numero)\n    const novoEstado = {\n      cartas:cartas\n    }\n    this.setState(novoEstado)\n  } */\n\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Leandro Carvalho/Desktop/Projetos/IDH/idh-jogo/src/App.js"],"names":["React","Component","Card","Jogar","bd","Baralho","Mandante","Visitante","App","constructor","state","cartas","mandante","visitante","PegarDoBanco","dados","i","length","push","id","país","idh","exp","DistribuirCartas","indices","console","log","arrays","dividirArray","pop","array","tamanho","a1","slice","a2","mandanteHtml","map","x","document","getElementById","text","setState","render","bind"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport './App.css';\nimport Card from \"./components/Card/Card\";\nimport Jogar from \"./components/Jogar/Jogar\";\nimport bd from './bancoDeDados/bancoDeDados.json';\nimport Baralho from \"./components/Baralho/Baralho\"\nimport Mandante from \"./components/Jogador/Mandante\"\nimport Visitante from \"./components/Jogador/Visitante\"\n\nclass App extends Component{\n  constructor(){\n    super();\n    \n    this.state = {\n      cartas:[],\n      mandante:[],\n      visitante:[]\n      \n    }\n  }\n\n   PegarDoBanco(){\n    const dados = []\n    for(let i=0;i<bd.length;i++){\n      dados.push({\n        id:bd[i].id,\n        país:bd[i].país,\n        idh:bd[i].idh,\n        exp:bd[i].exp\n      })\n    } \n    return dados\n   }\n\n  DistribuirCartas(indices){\n    console.log(indices)\n    var arrays;\n    if(indices.length%2==0){\n      console.log('estou dividino certo')\n      arrays = dividirArray(indices)\n    }\n    else{\n      indices.pop()\n      arrays = dividirArray(indices)\n    }\n    function dividirArray(array){\n      let tamanho = array.length;\n      let a1 = array.slice(0,tamanho/2)\n      let a2 = array.slice(tamanho/2)      \n      return {a1:a1,a2:a2}\n    }\n\n    var mandanteHtml = []\n    arrays.a1.map((x)=>{\n        mandanteHtml.push(document.getElementById(x).text)\n    })\n    console.log('arrays divididos',arrays)\n    this.setState({\n      mandante: arrays.a1,\n      visitante:arrays.a2,\n      mandanteHtml:mandanteHtml\n    })\n\n   \n\n  }\n  \n\n  render(){\n    return(\n      <section className=\"conteudo\">\n     \n        <div id='mandante'>\n          <h2>Mandante</h2>\n        </div>\n        <div id='visitante'>\n        <h2>Visitante</h2>\n        </div>\n        <Baralho cartas={this.PegarDoBanco()}/>\n         <Jogar class=\"classeJogar\"  DistribuirCartas={this.DistribuirCartas.bind(this)}/>\n        <Mandante className='mandante' mao={this.state.mandante} maoHtml={this.state.mandanteHtml}/>\n        <Visitante className='visitante' mao={this.state.visitante}/>\n        \n      </section>\n    )\n  }\n\n  \n}\n\n// <Jogar class=\"classeJogar\" criarCarta={this.criarCarta.bind(this)}/>\n//<Baralho cartas={this.state.cartas}/>\n\n//<button onClick={this.CriarBaralho.bind(this)} >Mostrar Cartas</button>\n  \n/*   criarCarta(numero){\n    \n    var cartas = []\n    for(let i=0;i<numero.length;i++){\n      cartas.push({\n        pais:bd[i].país,\n        idh:bd[i].idh,\n        exp:bd[i].exp\n      })\n    }\n    console.log('numero é',numero)\n    const novoEstado = {\n      cartas:cartas\n    }\n    this.setState(novoEstado)\n  } */\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}