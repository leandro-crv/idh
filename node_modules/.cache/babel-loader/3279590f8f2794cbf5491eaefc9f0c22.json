{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leandro Carvalho\\\\Desktop\\\\Projetos\\\\IDH\\\\idh-jogo\\\\src\\\\components\\\\Jogar\\\\Jogar.jsx\";\nimport React, { Component } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n/* import \"../../assets/Jogar.css\"; */\n\nimport bd from '../../bancoDeDados/bancoDeDados.json';\nimport NumeroDeCartas from \"./NumeroDeCartas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Jogar extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleIniciarJogo(x) {\n    var testeNumero = document.getElementById('testeNumeroDeCartas').value;\n    console.log('testeNumero é', testeNumero);\n    var qqq = document.querySelectorAll(`[name='qqq']`);\n    var qq = [...qqq];\n    let qualFoi = '';\n    qq.map(e => e.selected ? qualFoi = e.value : '');\n    console.log('qual foi é', qualFoi);\n    var num = document.querySelectorAll(`[name='qtCartas']`);\n    let n = [...num];\n    let quantidadeDeCartas = 0;\n    n.map(e => e.selected ? quantidadeDeCartas = e.value : '');\n    let qCartas = document.querySelectorAll(`[name='qlCartas']`);\n    let q = [...qCartas];\n    let selecionarCartas = 'aleatoriamente';\n    q.map(e => e.selected ? selecionarCartas = e.value : '');\n    var botaoAtual = x.target.getAttribute('name');\n\n    if (botaoAtual == 'Recomeçar Jogo') {\n      this.props.RecomeçarJogo();\n    } else {\n      let totalDeCartas = Number(quantidadeDeCartas * 2);\n      let todosIds = [];\n      bd.map(e => todosIds.push(e.id));\n      let baralho = [];\n\n      if (selecionarCartas == 'aleatoria') {\n        let arrayAleatório = shuffle(todosIds);\n\n        for (let i = 0; i < totalDeCartas; i++) {\n          baralho.push(arrayAleatório[i]);\n        }\n      } else if (selecionarCartas == 'melhores') {\n        for (let i = 0; i < totalDeCartas; i++) {\n          baralho.push(todosIds[i]);\n        }\n      } else if (selecionarCartas == 'piores') {\n        let todosIdsInvertidos = todosIds.reverse();\n\n        for (let i = 0; i < totalDeCartas; i++) {\n          baralho.push(todosIdsInvertidos[i]);\n        }\n      }\n\n      function shuffle(array) {\n        var tmp,\n            current,\n            top = array.length;\n        if (top) while (--top) {\n          current = Math.floor(Math.random() * (top + 1));\n          tmp = array[current];\n          array[current] = array[top];\n          array[top] = tmp;\n        }\n        return array;\n      }\n\n      this.props.DistribuirCartas(baralho);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(NumeroDeCartas, {\n          visivel: this.props.jogoEmAndamento\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: this.props.resultado.visivel ? 'resultadoJogada' : 'none',\n          children: this.props.resultado.texto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleIniciarJogo.bind(this),\n          className: \"btn btn-secondary botao_iniciar\",\n          name: this.props.jogoEmAndamento ? 'Recomeçar Jogo' : 'Iniciar Jogo',\n          children: this.props.jogoEmAndamento ? 'Recomeçar Jogo' : 'Iniciar Jogo'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Jogar;","map":{"version":3,"sources":["C:/Users/Leandro Carvalho/Desktop/Projetos/IDH/idh-jogo/src/components/Jogar/Jogar.jsx"],"names":["React","Component","bd","NumeroDeCartas","Jogar","constructor","props","handleIniciarJogo","x","testeNumero","document","getElementById","value","console","log","qqq","querySelectorAll","qq","qualFoi","map","e","selected","num","n","quantidadeDeCartas","qCartas","q","selecionarCartas","botaoAtual","target","getAttribute","RecomeçarJogo","totalDeCartas","Number","todosIds","push","id","baralho","arrayAleatório","shuffle","i","todosIdsInvertidos","reverse","array","tmp","current","top","length","Math","floor","random","DistribuirCartas","render","jogoEmAndamento","resultado","visivel","texto","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n/* import \"../../assets/Jogar.css\"; */\r\nimport bd from '../../bancoDeDados/bancoDeDados.json';\r\nimport NumeroDeCartas from \"./NumeroDeCartas\"\r\n\r\nclass Jogar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    handleIniciarJogo(x) {\r\n        var testeNumero = document.getElementById('testeNumeroDeCartas').value\r\n        console.log('testeNumero é',testeNumero)\r\n\r\n        var qqq = document.querySelectorAll(`[name='qqq']`)\r\n        var qq = [...qqq]\r\n        let qualFoi = '';\r\n        qq.map((e)=> e.selected ? qualFoi=e.value : '')\r\n        \r\n        console.log('qual foi é',qualFoi)\r\n\r\n        var num = document.querySelectorAll(`[name='qtCartas']`)\r\n        let n = [...num]\r\n        let quantidadeDeCartas = 0\r\n        n.map((e) => e.selected ? quantidadeDeCartas = e.value : '')\r\n\r\n        let qCartas = document.querySelectorAll(`[name='qlCartas']`)\r\n        let q = [...qCartas]\r\n        let selecionarCartas = 'aleatoriamente'\r\n        q.map((e) => e.selected ? selecionarCartas = e.value : '')\r\n\r\n         \r\n\r\n        var botaoAtual = x.target.getAttribute('name')\r\n\r\n        if (botaoAtual == 'Recomeçar Jogo') {\r\n                        \r\n            this.props.RecomeçarJogo()\r\n        }\r\n        else {\r\n\r\n            \r\n            let totalDeCartas = Number(quantidadeDeCartas * 2);\r\n\r\n            let todosIds = [];\r\n            bd.map((e) => todosIds.push(e.id))\r\n\r\n            let baralho = []\r\n            if (selecionarCartas == 'aleatoria') {\r\n                let arrayAleatório = shuffle(todosIds)\r\n                for (let i = 0; i < totalDeCartas; i++) {\r\n                    baralho.push(arrayAleatório[i])\r\n                }\r\n            } else if (selecionarCartas == 'melhores') {\r\n                for (let i = 0; i < totalDeCartas; i++) {\r\n                    baralho.push(todosIds[i])\r\n                }\r\n            }\r\n            else if (selecionarCartas == 'piores') {\r\n                let todosIdsInvertidos = todosIds.reverse()\r\n                for (let i = 0; i < totalDeCartas; i++) {\r\n                    baralho.push(todosIdsInvertidos[i])\r\n                }\r\n\r\n            }\r\n\r\n            function shuffle(array) {\r\n                var tmp, current, top = array.length;\r\n\r\n                if (top) while (--top) {\r\n                    current = Math.floor(Math.random() * (top + 1));\r\n                    tmp = array[current];\r\n                    array[current] = array[top];\r\n                    array[top] = tmp;\r\n                }\r\n\r\n                return array;\r\n            }\r\n            \r\n\r\n\r\n            this.props.DistribuirCartas(baralho)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <ul>\r\n            <li>\r\n                <NumeroDeCartas visivel={this.props.jogoEmAndamento} />\r\n            </li>\r\n            <li>\r\n                <p className={this.props.resultado.visivel ? 'resultadoJogada' : 'none'}>{this.props.resultado.texto}</p>\r\n            </li>\r\n            <li>\r\n                    <button\r\n                    onClick={this.handleIniciarJogo.bind(this)}\r\n                    className=\"btn btn-secondary botao_iniciar\"\r\n                    name={this.props.jogoEmAndamento ? 'Recomeçar Jogo' : 'Iniciar Jogo'}>{this.props.jogoEmAndamento ? 'Recomeçar Jogo' : 'Iniciar Jogo'}\r\n                    </button>\r\n            </li>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Jogar;"]},"metadata":{},"sourceType":"module"}