{"ast":null,"code":"\"use strict\";\n\nvar countries = require(\"../data/countries\");\n\nfunction isEqual(str1, str2) {\n  return str1.toUpperCase() === str2.toUpperCase();\n}\n\nfunction findFlagUrlByPredicate(countries, predicate) {\n  var country = countries.find(predicate);\n  return country ? country.flag : \"\";\n}\n\nmodule.exports = {\n  findFlagUrlByCountryName: function findFlagUrlByCountryName(countryName) {\n    return findFlagUrlByPredicate(countries, function (_ref) {\n      var name = _ref.name,\n          altSpellings = _ref.altSpellings;\n      return isEqual(name, countryName) || altSpellings.some(function (altSpelling) {\n        return isEqual(altSpelling, countryName);\n      });\n    });\n  },\n  findFlagUrlByNationality: function findFlagUrlByNationality(nationality) {\n    return findFlagUrlByPredicate(countries, function (_ref2) {\n      var demonym = _ref2.demonym;\n      return isEqual(demonym, nationality);\n    });\n  },\n  findFlagUrlByIso2Code: function findFlagUrlByIso2Code(iso2Code) {\n    return findFlagUrlByPredicate(countries, function (_ref3) {\n      var iso2 = _ref3.iso2;\n      return isEqual(iso2, iso2Code);\n    });\n  },\n  findFlagUrlByIso3Code: function findFlagUrlByIso3Code(iso3Code) {\n    return findFlagUrlByPredicate(countries, function (_ref4) {\n      var iso3 = _ref4.iso3;\n      return isEqual(iso3, iso3Code);\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Leandro Carvalho/Desktop/Projetos/IDH/idh-jogo/node_modules/country-flags-svg/dist/lib/api.js"],"names":["countries","require","isEqual","str1","str2","toUpperCase","findFlagUrlByPredicate","predicate","country","find","flag","module","exports","findFlagUrlByCountryName","countryName","_ref","name","altSpellings","some","altSpelling","findFlagUrlByNationality","nationality","_ref2","demonym","findFlagUrlByIso2Code","iso2Code","_ref3","iso2","findFlagUrlByIso3Code","iso3Code","_ref4","iso3"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,mBAAD,CAAvB;;AAEA,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6B;AAC3B,SAAOD,IAAI,CAACE,WAAL,OAAuBD,IAAI,CAACC,WAAL,EAA9B;AACD;;AAED,SAASC,sBAAT,CAAgCN,SAAhC,EAA2CO,SAA3C,EAAsD;AACpD,MAAIC,OAAO,GAAGR,SAAS,CAACS,IAAV,CAAeF,SAAf,CAAd;AACA,SAAOC,OAAO,GAAGA,OAAO,CAACE,IAAX,GAAkB,EAAhC;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,wBAAwB,EAAE,SAASA,wBAAT,CAAkCC,WAAlC,EAA+C;AACvE,WAAOR,sBAAsB,CAACN,SAAD,EAAY,UAAUe,IAAV,EAAgB;AACvD,UAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;AAAA,UACIC,YAAY,GAAGF,IAAI,CAACE,YADxB;AAEA,aAAOf,OAAO,CAACc,IAAD,EAAOF,WAAP,CAAP,IAA8BG,YAAY,CAACC,IAAb,CAAkB,UAAUC,WAAV,EAAuB;AAC5E,eAAOjB,OAAO,CAACiB,WAAD,EAAcL,WAAd,CAAd;AACD,OAFoC,CAArC;AAGD,KAN4B,CAA7B;AAOD,GATc;AAUfM,EAAAA,wBAAwB,EAAE,SAASA,wBAAT,CAAkCC,WAAlC,EAA+C;AACvE,WAAOf,sBAAsB,CAACN,SAAD,EAAY,UAAUsB,KAAV,EAAiB;AACxD,UAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;AACA,aAAOrB,OAAO,CAACqB,OAAD,EAAUF,WAAV,CAAd;AACD,KAH4B,CAA7B;AAID,GAfc;AAgBfG,EAAAA,qBAAqB,EAAE,SAASA,qBAAT,CAA+BC,QAA/B,EAAyC;AAC9D,WAAOnB,sBAAsB,CAACN,SAAD,EAAY,UAAU0B,KAAV,EAAiB;AACxD,UAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,aAAOzB,OAAO,CAACyB,IAAD,EAAOF,QAAP,CAAd;AACD,KAH4B,CAA7B;AAID,GArBc;AAsBfG,EAAAA,qBAAqB,EAAE,SAASA,qBAAT,CAA+BC,QAA/B,EAAyC;AAC9D,WAAOvB,sBAAsB,CAACN,SAAD,EAAY,UAAU8B,KAAV,EAAiB;AACxD,UAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,aAAO7B,OAAO,CAAC6B,IAAD,EAAOF,QAAP,CAAd;AACD,KAH4B,CAA7B;AAID;AA3Bc,CAAjB","sourcesContent":["\"use strict\";\n\nvar countries = require(\"../data/countries\");\n\nfunction isEqual(str1, str2) {\n  return str1.toUpperCase() === str2.toUpperCase();\n}\n\nfunction findFlagUrlByPredicate(countries, predicate) {\n  var country = countries.find(predicate);\n  return country ? country.flag : \"\";\n}\n\nmodule.exports = {\n  findFlagUrlByCountryName: function findFlagUrlByCountryName(countryName) {\n    return findFlagUrlByPredicate(countries, function (_ref) {\n      var name = _ref.name,\n          altSpellings = _ref.altSpellings;\n      return isEqual(name, countryName) || altSpellings.some(function (altSpelling) {\n        return isEqual(altSpelling, countryName);\n      });\n    });\n  },\n  findFlagUrlByNationality: function findFlagUrlByNationality(nationality) {\n    return findFlagUrlByPredicate(countries, function (_ref2) {\n      var demonym = _ref2.demonym;\n      return isEqual(demonym, nationality);\n    });\n  },\n  findFlagUrlByIso2Code: function findFlagUrlByIso2Code(iso2Code) {\n    return findFlagUrlByPredicate(countries, function (_ref3) {\n      var iso2 = _ref3.iso2;\n      return isEqual(iso2, iso2Code);\n    });\n  },\n  findFlagUrlByIso3Code: function findFlagUrlByIso3Code(iso3Code) {\n    return findFlagUrlByPredicate(countries, function (_ref4) {\n      var iso3 = _ref4.iso3;\n      return isEqual(iso3, iso3Code);\n    });\n  }\n};"]},"metadata":{},"sourceType":"script"}